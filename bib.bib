@incollection{DBLP:reference/mc/BarrettT18,
  author    = {Clark Barrett and
               Cesare Tinelli},
  title     = {Satisfiability Modulo Theories},
  booktitle = {Handbook of Model Checking.},
  pages     = {305--343},
  year      = {2018},
  crossref  = {DBLP:reference/mc/2018},
  url       = {https://doi.org/10.1007/978-3-319-10575-8\_11},
  doi       = {10.1007/978-3-319-10575-8\_11},
  timestamp = {Tue, 29 May 2018 12:30:27 +0200},
  biburl    = {https://dblp.org/rec/bib/reference/mc/BarrettT18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{DBLP:books/daglib/0020348,
  author    = {Christel Baier and
               Joost{-}Pieter Katoen},
  title     = {Principles of model checking},
  publisher = {{MIT} Press},
  year      = {2008},
  isbn      = {978-0-262-02649-9},
  timestamp = {Tue, 15 Feb 2011 11:22:37 +0100},
  biburl    = {https://dblp.org/rec/bib/books/daglib/0020348},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@article{DBLP:journals/csur/BaldoniCDDF18,
  author    = {Roberto Baldoni and
               Emilio Coppa and
               Daniele Cono D'Elia and
               Camil Demetrescu and
               Irene Finocchi},
  title     = {A Survey of Symbolic Execution Techniques},
  journal   = {{ACM} Comput. Surv.},
  volume    = {51},
  number    = {3},
  pages     = {50:1--50:39},
  year      = {2018},
  url       = {http://doi.acm.org/10.1145/3182657},
  doi       = {10.1145/3182657},
  timestamp = {Thu, 26 Jul 2018 15:12:32 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/csur/BaldoniCDDF18},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@misc{synth,
  author = {James Bornholt},
  title = {Program Synthesis Explained},
  howpublished = "\url{https://homes.cs.washington.edu/~bornholt/post/synthesis-explained.html}",
  year = {2015}, 
  note = "[Online; accessed 28-August-2018]"
}

@article{DBLP:journals/corr/abs-1111-5652,
  author    = {Alexander Fuchs and
               Amit Goel and
               Jim Grundy and
               Sava Krstic and
               Cesare Tinelli},
  title     = {Ground interpolation for the theory of equality},
  journal   = {Logical Methods in Computer Science},
  volume    = {8},
  number    = {1},
  year      = {2012},
  url       = {https://doi.org/10.2168/LMCS-8(1:6)2012},
  doi       = {10.2168/LMCS-8(1:6)2012},
  timestamp = {Mon, 13 Aug 2018 16:46:33 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1111-5652},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{10.1007/978-3-642-14052-5_14,
author="B{\"o}hme, Sascha
and Weber, Tjark",
editor="Kaufmann, Matt
and Paulson, Lawrence C.",
title="Fast LCF-Style Proof Reconstruction for Z3",
booktitle="Interactive Theorem Proving",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="179--194",
abstract="The Satisfiability Modulo Theories (SMT) solver Z3 can generate proofs of unsatisfiability. We present independent reconstruction of these proofs in the theorem provers Isabelle/HOL and HOL4 with particular focus on efficiency. Our highly optimized implementations outperform previous LCF-style proof checkers for SMT, often by orders of magnitude. Detailed performance data shows that LCF-style proof reconstruction can be faster than proof search in Z3.",
isbn="978-3-642-14052-5"
}

@InProceedings{10.1007/978-3-642-22438-6_11,
	author="Blanchette, Jasmin Christian
	and B{\"o}hme, Sascha
	and Paulson, Lawrence C.",
	editor="Bj{\o}rner, Nikolaj
	and Sofronie-Stokkermans, Viorica",
	title="Extending Sledgehammer with SMT Solvers",
	booktitle="Automated Deduction -- CADE-23",
	year="2011",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="116--130",
	abstract="Sledgehammer is a component of Isabelle/HOL that employs first-order automatic theorem provers (ATPs) to discharge goals arising in interactive proofs. It heuristically selects relevant facts and, if an ATP is successful, produces a snippet that replays the proof in Isabelle. We extended Sledgehammer to invoke satisfiability modulo theories (SMT) solvers as well, exploiting its relevance filter and parallel architecture. Isabelle users are now pleasantly surprised by SMT proofs for problems beyond the ATPs' reach. Remarkably, the best SMT solver performs better than the best ATP on most of our benchmarks.",
	isbn="978-3-642-22438-6"
}

@article{DBLP:journals/japll/MengP09,
	author    = {Jia Meng and
	Lawrence C. Paulson},
	title     = {Lightweight relevance filtering for machine-generated resolution problems},
	journal   = {J. Appl. Log.},
	volume    = {7},
	number    = {1},
	pages     = {41--57},
	year      = {2009},
	url       = {https://doi.org/10.1016/j.jal.2007.07.004},
	doi       = {10.1016/j.jal.2007.07.004},
	timestamp = {Fri, 21 Feb 2020 13:13:00 +0100},
	biburl    = {https://dblp.org/rec/journals/japll/MengP09.bib},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{10.1007/978-3-642-22438-6_23,
	author="Hoder, Kry{\v{s}}tof
	and Voronkov, Andrei",
	editor="Bj{\o}rner, Nikolaj
	and Sofronie-Stokkermans, Viorica",
	title="Sine Qua Non for Large Theory Reasoning",
	booktitle="Automated Deduction -- CADE-23",
	year="2011",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="299--314",
	abstract="One possible way to deal with large theories is to have a good selection method for relevant axioms. This is confirmed by the fact that the largest available first-order knowledge base (the Open CYC) contains over 3 million axioms, while answering queries to it usually requires not more than a few dozen axioms. A method for axiom selection has been proposed by the first author in the Sumo INference Engine (SInE) system. SInE has won the large theory division of CASC in 2008. The method turned out to be so successful that the next two years it was used by the winner as well as by several other competing systems. This paper contains the presentation of the method and describes experiments with it in the theorem prover Vampire.",
	isbn="978-3-642-22438-6"
}

@InProceedings{10.1007/978-3-642-02959-2_13,
	author="Roederer, Alex
	and Puzis, Yury
	and Sutcliffe, Geoff",
	editor="Schmidt, Renate A.",
	title="Divvy: An ATP Meta-system Based on Axiom Relevance Ordering",
	booktitle="Automated Deduction -- CADE-22",
	year="2009",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="157--162",
	abstract="This paper describes two syntactic relevance orderings on the axioms available for proving a given conjecture, and an ATP meta-system that uses the orderings to select axioms to use in proof attempts. The system has been evaluated, and the results show that it is effective.",
	isbn="978-3-642-02959-2"
}

@article{DBLP:journals/jar/AlamaHKTU14,
	author    = {Jesse Alama and
	Tom Heskes and
	Daniel K{\"{u}}hlwein and
	Evgeni Tsivtsivadze and
	Josef Urban},
	title     = {Premise Selection for Mathematics by Corpus Analysis and Kernel Methods},
	journal   = {J. Autom. Reason.},
	volume    = {52},
	number    = {2},
	pages     = {191--213},
	year      = {2014},
	url       = {https://doi.org/10.1007/s10817-013-9286-5},
	doi       = {10.1007/s10817-013-9286-5},
	timestamp = {Wed, 02 Sep 2020 13:29:52 +0200},
	biburl    = {https://dblp.org/rec/journals/jar/AlamaHKTU14.bib},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/cade/KaliszykU13a,
	author    = {Cezary Kaliszyk and
	Josef Urban},
	editor    = {Jasmin Christian Blanchette and
	Josef Urban},
	title     = {Stronger Automation for Flyspeck by Feature Weighting and Strategy
	Evolution},
	booktitle = {Third International Workshop on Proof Exchange for Theorem Proving,
	PxTP 2013, Lake Placid, NY, USA, June 9-10, 2013},
	series    = {EPiC Series in Computing},
	volume    = {14},
	pages     = {87--95},
	publisher = {EasyChair},
	year      = {2013},
	url       = {https://easychair.org/publications/paper/VZv6},
	timestamp = {Wed, 27 May 2020 16:02:35 +0200},
	biburl    = {https://dblp.org/rec/conf/cade/KaliszykU13a.bib},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{10.1007/978-3-540-73595-3_20,
	author="Sutcliffe, Geoff
	and Puzis, Yury",
	editor="Pfenning, Frank",
	title="SRASS - A Semantic Relevance Axiom Selection System",
	booktitle="Automated Deduction -- CADE-21",
	year="2007",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="295--310",
	abstract="This paper describes the design, implementation, and testing of a system for selecting necessary axioms from a large set also containing superfluous axioms, to obtain a proof of a conjecture. The selection is determined by semantics of the axioms and conjecture, ordered heuristically by a syntactic relevance measure. The system is able to solve many problems that cannot be solved alone by the underlying conventional automated reasoning system.",
	isbn="978-3-540-73595-3"
}

@article{DBLP:journals/corr/KaliszykU13b,
	author    = {Cezary Kaliszyk and
	Josef Urban},
	title     = {MizAR 40 for Mizar 40},
	journal   = {CoRR},
	volume    = {abs/1310.2805},
	year      = {2013},
	url       = {http://arxiv.org/abs/1310.2805},
	archivePrefix = {arXiv},
	eprint    = {1310.2805},
	timestamp = {Mon, 13 Aug 2018 16:47:12 +0200},
	biburl    = {https://dblp.org/rec/journals/corr/KaliszykU13b.bib},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{10.1007/978-3-642-31365-3_30,
	author="K{\"u}hlwein, Daniel
	and van Laarhoven, Twan
	and Tsivtsivadze, Evgeni
	and Urban, Josef
	and Heskes, Tom",
	editor="Gramlich, Bernhard
	and Miller, Dale
	and Sattler, Uli",
	title="Overview and Evaluation of Premise Selection Techniques for Large Theory Mathematics",
	booktitle="Automated Reasoning",
	year="2012",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="378--392",
	abstract="In this paper, an overview of state-of-the-art techniques for premise selection in large theory mathematics is provided, and new premise selection techniques are introduced. Several evaluation metrics are introduced, compared and their appropriateness is discussed in the context of automated reasoning in large theory mathematics. The methods are evaluated on the MPTP2078 benchmark, a subset of the Mizar library, and a 10{\%} improvement is obtained over the best method so far.",
	isbn="978-3-642-31365-3"
}

@article{DBLP:journals/jar/MengP08,
	author    = {Jia Meng and
	Lawrence C. Paulson},
	title     = {Translating Higher-Order Clauses to First-Order Clauses},
	journal   = {J. Autom. Reason.},
	volume    = {40},
	number    = {1},
	pages     = {35--60},
	year      = {2008},
	url       = {https://doi.org/10.1007/s10817-007-9085-y},
	doi       = {10.1007/s10817-007-9085-y},
	timestamp = {Wed, 02 Sep 2020 13:29:47 +0200},
	biburl    = {https://dblp.org/rec/journals/jar/MengP08.bib},
	bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{10.1007/978-3-540-74591-4_18,
	author="Paulson, Lawrence C.
	and Susanto, Kong Woei",
	editor="Schneider, Klaus
	and Brandt, Jens",
	title="Source-Level Proof Reconstruction for Interactive Theorem Proving",
	booktitle="Theorem Proving in Higher Order Logics",
	year="2007",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="232--245",
	abstract="Interactive proof assistants should verify the proofs they receive from automatic theorem provers. Normally this proof reconstruction takes place internally, forming part of the integration between the two tools. We have implemented source-level proof reconstruction: resolution proofs are automatically translated to Isabelle proof scripts. Users can insert this text into their proof development or (if they wish) examine it manually. Each step of a proof is justified by calling Hurd's Metis prover, which we have ported to Isabelle. A recurrent issue in this project is the treatment of Isabelle's axiomatic type classes.",
	isbn="978-3-540-74591-4"
}

@InProceedings{10.1007/978-3-642-38574-2_18,
	author="Kaliszyk, Cezary
	and Urban, Josef",
	editor="Bonacina, Maria Paola",
	title="PRocH: Proof Reconstruction for HOL Light",
	booktitle="Automated Deduction -- CADE-24",
	year="2013",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="267--274",
	abstract="PRocH is a proof reconstruction tool that imports in HOL Light proofs produced by ATPs on the recently developed translation of HOL Light and Flyspeck problems to ATP formats. PRocH combines several reconstruction methods in parallel, but the core improvement over previous methods is obtained by re-playing in the HOL logic the detailed inference steps recorded in the ATP (TPTP) proofs, using several internal HOL Light inference methods. These methods range from fast variable matching and more involved rewriting, to full first-order theorem proving using the MESON tactic. The system is described and its performance is evaluated here on a large set of Flyspeck problems.",
	isbn="978-3-642-38574-2"
}

@techreport{10.5555/891954,
author = {Milner, Robin},
title = {Logic for Computable Functions: Description of a Machine Implementation.},
year = {1972},
publisher = {Stanford University},
address = {Stanford, CA, USA},
abstract = {This paper is primarily a user''s manual for LCF, a proof-checking program for a logic of computable functions proposed by Dana Scott in 1969 but unpublished by him. We use the name LCF also for the logic itself, which is presented at the start of the paper. The proof-checking program is designed to allow the user interactively to generate formal proofs about computable functions and functionals over a variety of domains, including those of interest to the computer scientist - for example, integers, lists and computer programs and their semantics. The user''s task is alleviated by two features: a subgoaling facility and a powerful simplification mechanism. Applications include proofs of program correctness and in particular of compiler correctness; these applications are not discussed herein, but are illustrated in the papers referenced in this introduction.}
}

@Inbook{Loeckx1987,
author="Loeckx, Jacques
and Sieber, Kurt",
title="LCF, A Logic for Computable Functions",
bookTitle="The Foundations of Program Verification",
year="1987",
publisher="Vieweg+Teubner Verlag",
address="Wiesbaden",
pages="199--214",
abstract="LCF consists of a logic for cpo's and continuous functions, and of a corresponding calculus allowing in particular the formal verification of programs. It differs from the Hoare logic and calculus in the following points. First, the Hoare calculus was developed for a particular programming language, namely the while-programming language. LCF was developed for cpo's and is applicable to any programming language whose semantics is denotationally described. Second, it is possible to formulate and prove total correctness in LCF as well as partial correctness. Properties like those in Examples 9.4 and 9.5 are also provable. Third, LCF does not build on the predicate logic, but instead starts from scratch. The reason is that it is necessary to consider the $\omega$-extensions of predicates, that is, those predicates with range Bool$\omega$, and not the `usual' predicates with range Bool. For a similar reason it was not possible in Section 3.3 to build the (operational) semantics of recursive programs on the predicate logic.",
isbn="978-3-322-96753-4",
doi="10.1007/978-3-322-96753-4_10",
url="https://doi.org/10.1007/978-3-322-96753-4_10"
}

@phdthesis{DBLP:phd/dnb/Bohme12,
  author    = {Sascha B{\"{o}}hme},
  title     = {Proving Theorems of Higher-Order Logic with {SMT} Solvers},
  school    = {Technical University Munich},
  year      = {2012},
  url       = {https://nbn-resolving.org/urn:nbn:de:bvb:91-diss-20120511-1084525-1-4},
  urn       = {urn:nbn:de:bvb:91-diss-20120511-1084525-1-4},
  timestamp = {Wed, 12 Feb 2020 16:42:39 +0100},
  biburl    = {https://dblp.org/rec/phd/dnb/Bohme12.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@Inbook{Tseitin1983,
author="Tseitin, G. S.",
editor="Siekmann, J{\"o}rg H.
and Wrightson, Graham",
title="On the Complexity of Derivation in Propositional Calculus",
bookTitle="Automation of Reasoning: 2: Classical Papers on Computational Logic 1967--1970",
year="1983",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="466--483",
abstract="The question of the minimum complexity of derivation of a given formula in classical propositional calculus is considered in this article and it is proved that estimates of complexity may vary considerably among the various forms of propositional calculus. The forms of propositional calculus used in the present article are somewhat unusual, {\textdagger} but the results obtained for them can, in principle, be extended to the usual forms of propositional calculus.",
isbn="978-3-642-81955-1",
doi="10.1007/978-3-642-81955-1_28",
url="https://doi.org/10.1007/978-3-642-81955-1_28"
}

@incollection{NONNENGART2001335,
title = "Chapter 6 - Computing Small Clause Normal Forms",
editor = "Alan Robinson and Andrei Voronkov",
booktitle = "Handbook of Automated Reasoning",
publisher = "North-Holland",
address = "Amsterdam",
pages = "335 - 367",
year = "2001",
series = "Handbook of Automated Reasoning",
isbn = "978-0-444-50813-3",
doi = "https://doi.org/10.1016/B978-044450813-3/50008-4",
url = "http://www.sciencedirect.com/science/article/pii/B9780444508133500084",
author = "Andreas Nonnengart and Christoph Weidenbach"
}
